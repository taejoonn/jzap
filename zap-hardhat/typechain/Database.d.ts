/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DatabaseInterface extends ethers.utils.Interface {
  functions: {
    "setIntArrayIndex(bytes32,uint256,int256)": FunctionFragment;
    "pushIntArray(bytes32,int256)": FunctionFragment;
    "getIntArray(bytes32)": FunctionFragment;
    "setBytes(bytes32,bytes)": FunctionFragment;
    "getNumber(bytes32)": FunctionFragment;
    "getAddressArrayLength(bytes32)": FunctionFragment;
    "getBytesArrayLength(bytes32)": FunctionFragment;
    "setBytes32(bytes32,bytes32)": FunctionFragment;
    "setNumber(bytes32,uint256)": FunctionFragment;
    "setBytesArray(bytes32,bytes32[])": FunctionFragment;
    "getAddressArray(bytes32)": FunctionFragment;
    "getBytesArrayIndex(bytes32,uint256)": FunctionFragment;
    "setString(bytes32,string)": FunctionFragment;
    "setAddressArrayIndex(bytes32,uint256,address)": FunctionFragment;
    "pushBytesArray(bytes32,bytes32)": FunctionFragment;
    "owner()": FunctionFragment;
    "getBytesArray(bytes32)": FunctionFragment;
    "getString(bytes32)": FunctionFragment;
    "getIntArrayLength(bytes32)": FunctionFragment;
    "getIntArrayIndex(bytes32,uint256)": FunctionFragment;
    "setStorageContract(address,bool)": FunctionFragment;
    "setBytesArrayIndex(bytes32,uint256,bytes32)": FunctionFragment;
    "getBytes32(bytes32)": FunctionFragment;
    "setIntArray(bytes32,int256[])": FunctionFragment;
    "getBytes(bytes32)": FunctionFragment;
    "pushAddressArray(bytes32,address)": FunctionFragment;
    "getAddressArrayIndex(bytes32,uint256)": FunctionFragment;
    "setAddressArray(bytes32,address[])": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "setIntArrayIndex",
    values: [BytesLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pushIntArray",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getIntArray",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setBytes",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getNumber",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressArrayLength",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBytesArrayLength",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setBytes32",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setNumber",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBytesArray",
    values: [BytesLike, BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressArray",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBytesArrayIndex",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setString",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddressArrayIndex",
    values: [BytesLike, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "pushBytesArray",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getBytesArray",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getString",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getIntArrayLength",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getIntArrayIndex",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setStorageContract",
    values: [string, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setBytesArrayIndex",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBytes32",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setIntArray",
    values: [BytesLike, BigNumberish[]]
  ): string;
  encodeFunctionData(functionFragment: "getBytes", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "pushAddressArray",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddressArrayIndex",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddressArray",
    values: [BytesLike, string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "setIntArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pushIntArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIntArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setBytes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getNumber", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAddressArrayLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBytesArrayLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setBytes32", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setNumber", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setBytesArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddressArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBytesArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setString", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAddressArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pushBytesArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getBytesArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getString", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getIntArrayLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIntArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStorageContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBytesArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBytes32", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setIntArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBytes", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pushAddressArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddressArrayIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAddressArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "StorageModified(address,bool)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "StorageModified"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export class Database extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DatabaseInterface;

  functions: {
    setIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setIntArrayIndex(bytes32,uint256,int256)"(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    pushIntArray(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "pushIntArray(bytes32,int256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getIntArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getIntArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    setBytes(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBytes(bytes32,bytes)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getNumber(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getNumber(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getAddressArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getAddressArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getBytesArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getBytesArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    setBytes32(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBytes32(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setNumber(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setNumber(bytes32,uint256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setBytesArray(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBytesArray(bytes32,bytes32[])"(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAddressArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getAddressArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    getBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getBytesArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setString(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setString(bytes32,string)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAddressArrayIndex(bytes32,uint256,address)"(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    pushBytesArray(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "pushBytesArray(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    owner(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "owner()"(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getBytesArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getBytesArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    getString(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getString(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getIntArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getIntArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "getIntArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    setStorageContract(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setStorageContract(address,bool)"(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setBytesArrayIndex(bytes32,uint256,bytes32)"(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getBytes32(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getBytes32(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setIntArray(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setIntArray(bytes32,int256[])"(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getBytes(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getBytes(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    pushAddressArray(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "pushAddressArray(bytes32,address)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getAddressArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    setAddressArray(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setAddressArray(bytes32,address[])"(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  setIntArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setIntArrayIndex(bytes32,uint256,int256)"(
    key: BytesLike,
    index: BigNumberish,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  pushIntArray(
    key: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "pushIntArray(bytes32,int256)"(
    key: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getIntArray(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber[]>;

  "getIntArray(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  setBytes(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBytes(bytes32,bytes)"(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getNumber(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  "getNumber(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAddressArrayLength(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAddressArrayLength(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getBytesArrayLength(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getBytesArrayLength(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setBytes32(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBytes32(bytes32,bytes32)"(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setNumber(
    key: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setNumber(bytes32,uint256)"(
    key: BytesLike,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setBytesArray(
    key: BytesLike,
    value: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBytesArray(bytes32,bytes32[])"(
    key: BytesLike,
    value: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getAddressArray(key: BytesLike, overrides?: CallOverrides): Promise<string[]>;

  "getAddressArray(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getBytesArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getBytesArrayIndex(bytes32,uint256)"(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  setString(
    key: BytesLike,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setString(bytes32,string)"(
    key: BytesLike,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setAddressArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAddressArrayIndex(bytes32,uint256,address)"(
    key: BytesLike,
    index: BigNumberish,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  pushBytesArray(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "pushBytesArray(bytes32,bytes32)"(
    key: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  getBytesArray(key: BytesLike, overrides?: CallOverrides): Promise<string[]>;

  "getBytesArray(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getString(key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getString(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getIntArrayLength(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getIntArrayLength(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getIntArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getIntArrayIndex(bytes32,uint256)"(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setStorageContract(
    _storageContract: string,
    _allowed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setStorageContract(address,bool)"(
    _storageContract: string,
    _allowed: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setBytesArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setBytesArrayIndex(bytes32,uint256,bytes32)"(
    key: BytesLike,
    index: BigNumberish,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getBytes32(key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getBytes32(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  setIntArray(
    key: BytesLike,
    value: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setIntArray(bytes32,int256[])"(
    key: BytesLike,
    value: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getBytes(key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "getBytes(bytes32)"(
    key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  pushAddressArray(
    key: BytesLike,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "pushAddressArray(bytes32,address)"(
    key: BytesLike,
    value: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getAddressArrayIndex(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getAddressArrayIndex(bytes32,uint256)"(
    key: BytesLike,
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  setAddressArray(
    key: BytesLike,
    value: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setAddressArray(bytes32,address[])"(
    key: BytesLike,
    value: string[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    setIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setIntArrayIndex(bytes32,uint256,int256)"(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    pushIntArray(
      key: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "pushIntArray(bytes32,int256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getIntArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getIntArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    setBytes(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBytes(bytes32,bytes)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getNumber(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getNumber(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAddressArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBytesArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBytesArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setBytes32(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBytes32(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setNumber(
      key: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setNumber(bytes32,uint256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBytesArray(
      key: BytesLike,
      value: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setBytesArray(bytes32,bytes32[])"(
      key: BytesLike,
      value: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    getAddressArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getAddressArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getBytesArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    setString(
      key: BytesLike,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setString(bytes32,string)"(
      key: BytesLike,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAddressArrayIndex(bytes32,uint256,address)"(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    pushBytesArray(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "pushBytesArray(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    getBytesArray(key: BytesLike, overrides?: CallOverrides): Promise<string[]>;

    "getBytesArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getString(key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getString(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getIntArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIntArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIntArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setStorageContract(
      _storageContract: string,
      _allowed: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setStorageContract(address,bool)"(
      _storageContract: string,
      _allowed: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBytesArrayIndex(bytes32,uint256,bytes32)"(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    getBytes32(key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getBytes32(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    setIntArray(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setIntArray(bytes32,int256[])"(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    getBytes(key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "getBytes(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    pushAddressArray(
      key: BytesLike,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "pushAddressArray(bytes32,address)"(
      key: BytesLike,
      value: string,
      overrides?: CallOverrides
    ): Promise<void>;

    getAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAddressArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    setAddressArray(
      key: BytesLike,
      value: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setAddressArray(bytes32,address[])"(
      key: BytesLike,
      value: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    StorageModified(contractAddress: string | null, allowed: null): EventFilter;

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;
  };

  estimateGas: {
    setIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setIntArrayIndex(bytes32,uint256,int256)"(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    pushIntArray(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "pushIntArray(bytes32,int256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getIntArray(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getIntArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setBytes(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBytes(bytes32,bytes)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getNumber(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getNumber(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAddressArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBytesArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBytesArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setBytes32(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBytes32(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setNumber(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setNumber(bytes32,uint256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setBytesArray(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBytesArray(bytes32,bytes32[])"(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    getAddressArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBytesArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setString(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setString(bytes32,string)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAddressArrayIndex(bytes32,uint256,address)"(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    pushBytesArray(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "pushBytesArray(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    getBytesArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBytesArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getString(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getString(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIntArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIntArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getIntArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setStorageContract(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setStorageContract(address,bool)"(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setBytesArrayIndex(bytes32,uint256,bytes32)"(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getBytes32(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getBytes32(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setIntArray(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setIntArray(bytes32,int256[])"(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    getBytes(key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "getBytes(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pushAddressArray(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "pushAddressArray(bytes32,address)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAddressArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAddressArray(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setAddressArray(bytes32,address[])"(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    setIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setIntArrayIndex(bytes32,uint256,int256)"(
      key: BytesLike,
      index: BigNumberish,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    pushIntArray(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "pushIntArray(bytes32,int256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getIntArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIntArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setBytes(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBytes(bytes32,bytes)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getNumber(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getNumber(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAddressArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBytesArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBytesArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setBytes32(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBytes32(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setNumber(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setNumber(bytes32,uint256)"(
      key: BytesLike,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setBytesArray(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBytesArray(bytes32,bytes32[])"(
      key: BytesLike,
      value: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAddressArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBytesArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setString(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setString(bytes32,string)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAddressArrayIndex(bytes32,uint256,address)"(
      key: BytesLike,
      index: BigNumberish,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    pushBytesArray(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "pushBytesArray(bytes32,bytes32)"(
      key: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getBytesArray(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBytesArray(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getString(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getString(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIntArrayLength(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIntArrayLength(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIntArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIntArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setStorageContract(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setStorageContract(address,bool)"(
      _storageContract: string,
      _allowed: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setBytesArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setBytesArrayIndex(bytes32,uint256,bytes32)"(
      key: BytesLike,
      index: BigNumberish,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getBytes32(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBytes32(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setIntArray(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setIntArray(bytes32,int256[])"(
      key: BytesLike,
      value: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getBytes(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBytes(bytes32)"(
      key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pushAddressArray(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "pushAddressArray(bytes32,address)"(
      key: BytesLike,
      value: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getAddressArrayIndex(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAddressArrayIndex(bytes32,uint256)"(
      key: BytesLike,
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAddressArray(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setAddressArray(bytes32,address[])"(
      key: BytesLike,
      value: string[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
