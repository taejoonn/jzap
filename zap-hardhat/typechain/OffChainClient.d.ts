/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface OffChainClientInterface extends ethers.utils.Interface {
  functions: {
    "getQueryIntResultByOrder(uint256)": FunctionFragment;
    "queryIDs(uint256)": FunctionFragment;
    "getQueryBytes32ResultById(uint256)": FunctionFragment;
    "totalBytes32Queries()": FunctionFragment;
    "queryIntIDs(uint256)": FunctionFragment;
    "queryBytes32Results(uint256,uint256)": FunctionFragment;
    "callback(uint256,bytes32[])": FunctionFragment;
    "Callback(uint256,string)": FunctionFragment;
    "totalIntQueries()": FunctionFragment;
    "cancelQuery(uint256)": FunctionFragment;
    "getQueryBytes32ResultByOrder(uint256)": FunctionFragment;
    "getQueryBytesResultByData(uint256,uint256,string,address,address)": FunctionFragment;
    "queryResults(uint256)": FunctionFragment;
    "totalQueries()": FunctionFragment;
    "queryIntResults(uint256,uint256)": FunctionFragment;
    "getQueryResultByOrder(uint256)": FunctionFragment;
    "getQueryIntResultByData(uint256,uint256,string,address,address)": FunctionFragment;
    "getQueryResultById(uint256)": FunctionFragment;
    "getQueryIntResultById(uint256)": FunctionFragment;
    "testQuery(address,string,bytes32,bytes32[])": FunctionFragment;
    "queryBytes32IDs(uint256)": FunctionFragment;
    "getQueryResultByData(uint256,uint256,string,address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getQueryIntResultByOrder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "queryIDs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryBytes32ResultById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalBytes32Queries",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "queryIntIDs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "queryBytes32Results",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "callback",
    values: [BigNumberish, BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "Callback",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "totalIntQueries",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cancelQuery",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryBytes32ResultByOrder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryBytesResultByData",
    values: [BigNumberish, BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "queryResults",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "totalQueries",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "queryIntResults",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryResultByOrder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryIntResultByData",
    values: [BigNumberish, BigNumberish, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryResultById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryIntResultById",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "testQuery",
    values: [string, string, BytesLike, BytesLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "queryBytes32IDs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getQueryResultByData",
    values: [BigNumberish, BigNumberish, string, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getQueryIntResultByOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "queryIDs", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getQueryBytes32ResultById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalBytes32Queries",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryIntIDs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryBytes32Results",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "callback", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "Callback", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "totalIntQueries",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelQuery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryBytes32ResultByOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryBytesResultByData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryResults",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "totalQueries",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "queryIntResults",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryResultByOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryIntResultByData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryResultById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryIntResultById",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "testQuery", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "queryBytes32IDs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getQueryResultByData",
    data: BytesLike
  ): Result;

  events: {
    "MadeQuery(address,string,uint256)": EventFragment;
    "Result1(uint256,string)": EventFragment;
    "Result2(uint256,string,string)": EventFragment;
    "Result3(uint256,int256[])": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MadeQuery"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Result1"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Result2"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Result3"): EventFragment;
}

export class OffChainClient extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: OffChainClientInterface;

  functions: {
    getQueryIntResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getQueryIntResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    queryIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "queryIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getQueryBytes32ResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getQueryBytes32ResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    totalBytes32Queries(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalBytes32Queries()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    queryIntIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "queryIntIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    queryBytes32Results(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "queryBytes32Results(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "callback(uint256,bytes32[])"(
      id: BigNumberish,
      response: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "callback(uint256,int256[])"(
      id: BigNumberish,
      response: BigNumberish[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "callback(uint256,string,string)"(
      id: BigNumberish,
      response1: string,
      response2: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    Callback(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "Callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    totalIntQueries(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalIntQueries()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    cancelQuery(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "cancelQuery(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    getQueryBytes32ResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getQueryBytes32ResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    getQueryBytesResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    "getQueryBytesResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string[];
    }>;

    queryResults(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "queryResults(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    totalQueries(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "totalQueries()"(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    queryIntResults(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "queryIntResults(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getQueryResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getQueryResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getQueryIntResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getQueryIntResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    getQueryResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getQueryResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    getQueryIntResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    "getQueryIntResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber[];
    }>;

    testQuery(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "testQuery(address,string,bytes32,bytes32[])"(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    queryBytes32IDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "queryBytes32IDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    getQueryResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "getQueryResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;
  };

  getQueryIntResultByOrder(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getQueryIntResultByOrder(uint256)"(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  queryIDs(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

  "queryIDs(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getQueryBytes32ResultById(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getQueryBytes32ResultById(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  totalBytes32Queries(overrides?: CallOverrides): Promise<BigNumber>;

  "totalBytes32Queries()"(overrides?: CallOverrides): Promise<BigNumber>;

  queryIntIDs(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "queryIntIDs(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  queryBytes32Results(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "queryBytes32Results(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "callback(uint256,bytes32[])"(
    id: BigNumberish,
    response: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "callback(uint256,int256[])"(
    id: BigNumberish,
    response: BigNumberish[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "callback(uint256,string)"(
    id: BigNumberish,
    response1: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "callback(uint256,string,string)"(
    id: BigNumberish,
    response1: string,
    response2: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  Callback(
    id: BigNumberish,
    response1: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "Callback(uint256,string)"(
    id: BigNumberish,
    response1: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  totalIntQueries(overrides?: CallOverrides): Promise<BigNumber>;

  "totalIntQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

  cancelQuery(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "cancelQuery(uint256)"(
    id: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  getQueryBytes32ResultByOrder(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getQueryBytes32ResultByOrder(uint256)"(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getQueryBytesResultByData(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "getQueryBytesResultByData(uint256,uint256,string,address,address)"(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  queryResults(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "queryResults(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  totalQueries(overrides?: CallOverrides): Promise<BigNumber>;

  "totalQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

  queryIntResults(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "queryIntResults(uint256,uint256)"(
    arg0: BigNumberish,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getQueryResultByOrder(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getQueryResultByOrder(uint256)"(
    pos: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getQueryIntResultByData(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getQueryIntResultByData(uint256,uint256,string,address,address)"(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getQueryResultById(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getQueryResultById(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getQueryIntResultById(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getQueryIntResultById(uint256)"(
    id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  testQuery(
    oracleAddr: string,
    query: string,
    specifier: BytesLike,
    params: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "testQuery(address,string,bytes32,bytes32[])"(
    oracleAddr: string,
    query: string,
    specifier: BytesLike,
    params: BytesLike[],
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  queryBytes32IDs(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "queryBytes32IDs(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getQueryResultByData(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getQueryResultByData(uint256,uint256,string,address,address)"(
    blockNumber: BigNumberish,
    timestamp: BigNumberish,
    query: string,
    subscriber: string,
    provider: string,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    getQueryIntResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getQueryIntResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    queryIDs(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "queryIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryBytes32ResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getQueryBytes32ResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    totalBytes32Queries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalBytes32Queries()"(overrides?: CallOverrides): Promise<BigNumber>;

    queryIntIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryIntIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryBytes32Results(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "queryBytes32Results(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "callback(uint256,bytes32[])"(
      id: BigNumberish,
      response: BytesLike[],
      overrides?: CallOverrides
    ): Promise<void>;

    "callback(uint256,int256[])"(
      id: BigNumberish,
      response: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "callback(uint256,string,string)"(
      id: BigNumberish,
      response1: string,
      response2: string,
      overrides?: CallOverrides
    ): Promise<void>;

    Callback(
      id: BigNumberish,
      response1: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "Callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: CallOverrides
    ): Promise<void>;

    totalIntQueries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalIntQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

    cancelQuery(id: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "cancelQuery(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getQueryBytes32ResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getQueryBytes32ResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getQueryBytesResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "getQueryBytesResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    queryResults(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "queryResults(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    totalQueries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

    queryIntResults(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryIntResults(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getQueryResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getQueryIntResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getQueryIntResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getQueryResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getQueryResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getQueryIntResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getQueryIntResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    testQuery(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "testQuery(address,string,bytes32,bytes32[])"(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryBytes32IDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryBytes32IDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getQueryResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    MadeQuery(oracle: null, query: null, id: null): EventFilter;

    Result1(id: null, response1: null): EventFilter;

    Result2(id: null, response1: null, response2: null): EventFilter;

    Result3(id: null, response3: null): EventFilter;
  };

  estimateGas: {
    getQueryIntResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryIntResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryIDs(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "queryIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryBytes32ResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryBytes32ResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalBytes32Queries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalBytes32Queries()"(overrides?: CallOverrides): Promise<BigNumber>;

    queryIntIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryIntIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryBytes32Results(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryBytes32Results(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "callback(uint256,bytes32[])"(
      id: BigNumberish,
      response: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "callback(uint256,int256[])"(
      id: BigNumberish,
      response: BigNumberish[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "callback(uint256,string,string)"(
      id: BigNumberish,
      response1: string,
      response2: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    Callback(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "Callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    totalIntQueries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalIntQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

    cancelQuery(id: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    "cancelQuery(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    getQueryBytes32ResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryBytes32ResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryBytesResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryBytesResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    queryResults(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryResults(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    totalQueries(overrides?: CallOverrides): Promise<BigNumber>;

    "totalQueries()"(overrides?: CallOverrides): Promise<BigNumber>;

    queryIntResults(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryIntResults(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryIntResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryIntResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryIntResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryIntResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    testQuery(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    "testQuery(address,string,bytes32,bytes32[])"(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<BigNumber>;

    queryBytes32IDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "queryBytes32IDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getQueryResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getQueryResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getQueryIntResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryIntResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryBytes32ResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryBytes32ResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalBytes32Queries(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "totalBytes32Queries()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryIntIDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryIntIDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryBytes32Results(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryBytes32Results(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "callback(uint256,bytes32[])"(
      id: BigNumberish,
      response: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "callback(uint256,int256[])"(
      id: BigNumberish,
      response: BigNumberish[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "callback(uint256,string,string)"(
      id: BigNumberish,
      response1: string,
      response2: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    Callback(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "Callback(uint256,string)"(
      id: BigNumberish,
      response1: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    totalIntQueries(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalIntQueries()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    cancelQuery(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "cancelQuery(uint256)"(
      id: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    getQueryBytes32ResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryBytes32ResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryBytesResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryBytesResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    queryResults(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryResults(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    totalQueries(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "totalQueries()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    queryIntResults(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryIntResults(uint256,uint256)"(
      arg0: BigNumberish,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryResultByOrder(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryResultByOrder(uint256)"(
      pos: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryIntResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryIntResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryIntResultById(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryIntResultById(uint256)"(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    testQuery(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "testQuery(address,string,bytes32,bytes32[])"(
      oracleAddr: string,
      query: string,
      specifier: BytesLike,
      params: BytesLike[],
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    queryBytes32IDs(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "queryBytes32IDs(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getQueryResultByData(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getQueryResultByData(uint256,uint256,string,address,address)"(
      blockNumber: BigNumberish,
      timestamp: BigNumberish,
      query: string,
      subscriber: string,
      provider: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
